(window.webpackJsonp=window.webpackJsonp||[]).push([[3,4],{10:function(n,e,i){"use strict";i.r(e),i.d(e,"init",(function(){return o})),i.d(e,"animate",(function(){return d})),i.d(e,"deinit",(function(){return l}));var t,r,a=i(2);function o(n,e){let i=new(r=e).Scene;var o=new r.AmbientLight(16777215);i.add(o);var d=new r.DirectionalLight(16777215,.6);d.position.set(0,1,0),d.castShadow=!0,i.add(d);var l=new r.Object3D;l.position.set(-20,0,-20),i.add(l),d.target=l,t=[];let c=new r.BoxBufferGeometry(20,20,40),s=a.specterMaterial,f=new r.Mesh(c,s);f.position.set(-40,0,0),t.push(f),i.add(f),a.specterMaterial.color=13972009;var u=new r.Mesh(new r.ConeGeometry(20,20,4),new r.MeshStandardMaterial({color:13972009}));return u.position.set(40,0,0),t.push(u),i.add(u),function(n,e){let i=80/n.length,t=new r.BoxBufferGeometry(i/2,10,15),a=16766513;for(let o=0;o<n.length;o++){let d=(72-n[o])/3,l=-2794504*d+a;console.log(d);let c=new r.Mesh(t,new r.MeshStandardMaterial({color:l}));c.position.set(o*i-40,0,10),c.scale.set(1,1,d),e.add(c)}}([70.114,69.14,69.14,68.653,68.653,69.14,68.653,69.627,69.627,68.653,69.627,69.14,69.14,68.653,70.114,69.14,69.14,69.14,68.653,69.14],i),i}function d(){t.forEach(n=>{n.rotation.x=Math.PI/2,n.rotation.y+=.02})}function l(){}},2:function(n,e,i){"use strict";i.r(e),i.d(e,"init",(function(){return w})),i.d(e,"getAlphaCanvas",(function(){return x})),i.d(e,"getBetaCanvas",(function(){return S})),i.d(e,"bufferPrint",(function(){return E})),i.d(e,"loadModel",(function(){return A})),i.d(e,"flipScene",(function(){return M})),i.d(e,"specterMaterial",(function(){return T})),i.d(e,"resize",(function(){return y}));var t,r,a,o,d,l,c,s,f,u,m=i(1),g=i(0),p=i(4),_=i(6),v=i(3),h=i(5);function w(n,e){var i;e&&(N=e),u=n,(t=new m.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,5e3)).position.z=100,t.position.y=-200,t.up=new m.Vector3(0,0,1),t.lookAt(new m.Vector3(0,100,0)),c=document.createElement("div"),s=document.createElement("div"),c.classList.add("canvasHolder"),s.classList.add("canvasHolder"),s.style.background="#fff5",c.reserved=!1,s.reserved=!1,(r=new m.WebGLRenderer({alpha:!0,antialias:!0})).shadowMap.enabled=!0,r.shadowMap.type=m.PCFSoftShadowMap,r.setClearColor(0,0),c.appendChild(r.domElement),d=new p.a,i=m.UniformsUtils.merge([m.ShaderLib.standard.uniforms]),T=new m.ShaderMaterial({uniforms:i,derivatives:!1,lights:!0,vertexColors:!0,vertexShader:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n    varying vec3 vNormal;\n    #ifdef USE_TANGENT\n        varying vec3 vTangent;\n        varying vec3 vBitangent;\n    #endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nuniform vec3 shirt;\nuniform vec3 wind;\n\nvoid main() {\n    #include <uv_vertex>\n    #include <uv2_vertex>\n    #ifdef USE_COLOR\n        if(color==vec3(0,0,1))\n            vColor.xyz = shirt;\n        else\n            vColor.xyz = color.xyz;\n        \n    #endif\n    #include <beginnormal_vertex>\n    #include <morphnormal_vertex>\n    #include <skinbase_vertex>\n    #include <skinnormal_vertex>\n    #include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n    vNormal = normalize( transformedNormal );\n    #ifdef USE_TANGENT\n        vTangent = normalize( transformedTangent );\n        vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n    #endif\n#endif\n    #include <begin_vertex>\n    #include <morphtarget_vertex>\n    #include <skinning_vertex>\n    #include <displacementmap_vertex>\n\n    \n        if(color==vec3(1,0,0)){\n            float val=max(0.0, 1.0976 - transformed.z);\n            transformed.xyz+=val*wind;\n            transformed.y*=1.0+sin((wind.z+transformed.z)*4.0)/2.0;\n\n        }\n    \n\n    #include <project_vertex>\n    #include <logdepthbuf_vertex>\n    #include <clipping_planes_vertex>\n    vViewPosition = - mvPosition.xyz;\n    #include <worldpos_vertex>\n    #include <shadowmap_vertex>\n    #include <fog_vertex>\n}",fragmentShader:"\n    #define STANDARD\n#ifdef PHYSICAL\n    #define REFLECTIVITY\n    #define CLEARCOAT\n    #define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n    uniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n    uniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n    uniform float clearcoat;\n    uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n    uniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n    varying vec3 vNormal;\n    #ifdef USE_TANGENT\n        varying vec3 vTangent;\n        varying vec3 vBitangent;\n    #endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n    #include <clipping_planes_fragment>\n    vec4 diffuseColor = vec4( diffuse, opacity );\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n    vec3 totalEmissiveRadiance = emissive;\n    #include <logdepthbuf_fragment>\n    #include <map_fragment>\n    #include <color_fragment>\n    #include <alphamap_fragment>\n    #include <alphatest_fragment>\n    #include <roughnessmap_fragment>\n    #include <metalnessmap_fragment>\n    #include <normal_fragment_begin>\n    #include <normal_fragment_maps>\n    #include <clearcoat_normal_fragment_begin>\n    #include <clearcoat_normal_fragment_maps>\n    #include <emissivemap_fragment>\n    #include <lights_physical_fragment>\n    #include <lights_fragment_begin>\n    #include <lights_fragment_maps>\n    #include <lights_fragment_end>\n    #include <aomap_fragment>\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n    #ifdef TRANSPARENCY\n        diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n    #endif\n    gl_FragColor = vec4( outgoingLight,1.-(((0.2125 * outgoingLight.r) + (0.7154 * outgoingLight.g) + (0.0721 * outgoingLight.b)) ) );\n    #include <tonemapping_fragment>\n    #include <encodings_fragment>\n    #include <fog_fragment>\n    #include <premultiplied_alpha_fragment>\n    #include <dithering_fragment>\n}",roughness:0,metalness:1}),function(){b=new m.Scene,C=[];new m.BoxBufferGeometry(20,20,20),new m.MeshStandardMaterial({color:16746547})}(),c,y(),f=new _.a(r);var a=new v.a(h.a);f.addPass(a),L()}function x(){return c}function S(){return s}function A(n,e,i,t){d.load("./"+n,n=>{let r;n.scene.rotation.x=Math.PI/2,n.scene.traverse((function(n){n instanceof m.Mesh&&(r=n,i||(n.material=t?new m.MeshStandardMaterial({color:t,metalness:0,roughness:1}):T,n.material.needsUpdate=!0))}));n.scene.children[0];if(r){var a=n.animations;if(a&&a.length){l=new m.AnimationMixer(r);for(var o=0;o<a.length;o++){var d=a[o];action=l.clipAction(d),action.timeScale=.002,action.play()}}}e(n.scene)},n=>{console.log(n.loaded/n.total*100+"% loaded")},n=>{console.error("An error happened",n)})}function y(){window.screen.width>window.innerWidth?(a=window.innerWidth,o=window.innerHeight):(a=window.screen.width,o=window.screen.height),t.aspect=a/o,t.updateProjectionMatrix(),r.setPixelRatio(.5),r.setSize(a,o)}function L(n){R&&R.animate(),r.render(P(),t),requestAnimationFrame(L)}function E(){r.render(P(),t),function(n){let e=document.querySelector("#afterImage");e&&e.setAttribute("src",n)}(r.domElement.toDataURL())}var T,b,C;function M(n){N=n}var R,N=0;function P(){let n=N,e=C[n];if(null==e){e=b,C[n]="pend";let i=u[n];i?(g.pendApp(n),i(e=>{C[n]=[e.init("start the feller",m),e],g.clearPendApp(n)})):C[n]=[b,void 0]}else"pend"==e?e=b:(R=e[1],e=e[0]);return e}}}]);